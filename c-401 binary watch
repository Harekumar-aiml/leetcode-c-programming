/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
char** readBinaryWatch(int turnedOn, int* returnSize) {
    int i,j;
    int a,h,m;
    a = 720;
    int c = turnedOn;
    int r = 0;
    int u,v;
    int da[3][720] = {0};
    char **ans;
    for(i = 0;i < 720;i++){
        u = v = 0;
        h = i/60;
        m = i%60;
        da[0][i] = h;
        da[1][i] = m;
        for(j = 0;j < 4;j++){
            u += h & 1;
            h = h >> 1;
        }
        for(j = 0;j < 6;j++){
            v += m & 1;
            m = m >> 1;
        }
        da[2][i] = u + v;   
    }
    for(i = 0;i < 720;i++){
        if(da[2][i] == c){
            r++;          
        }        
    }
    *returnSize = r;
    ans = (char **)malloc(r * sizeof(char *));
    for(j = 0;j < r;j++){
        ans[j] = (char *)malloc(6 * sizeof(char));
    }
    j = 0;
    for(i = 0;i < 720;i++){
        if(da[2][i] == c){
            sprintf(ans[j++],"%d:%02d",da[0][i],da[1][i]); 
        }
    }
    return ans;
}
